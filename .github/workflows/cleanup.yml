---
name: Workflow Cleanup

on:
  schedule:
    # Run daily at 3 AM UTC
    - cron: "0 3 * * *"
  workflow_dispatch:

permissions:
  actions: write
  contents: read

jobs:
  cleanup:
    name: Clean up old workflow runs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all branches for branch existence check

      - name: Delete failed workflow runs older than 7 days
        uses: actions/github-script@v7
        with:
          script: |
            const sevenDaysAgo = new Date();
            sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);

            console.log(`Deleting failed workflow runs older than ` +
              `${sevenDaysAgo.toISOString()}`);

            let page = 1;
            let totalDeleted = 0;

            while (true) {
              const { data: workflowRuns } = await github.rest.actions
                .listWorkflowRunsForRepo({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  status: 'failure',
                  per_page: 100,
                  page: page
                });

              if (workflowRuns.workflow_runs.length === 0) {
                break;
              }

              for (const run of workflowRuns.workflow_runs) {
                const runDate = new Date(run.created_at);
                if (runDate < sevenDaysAgo) {
                  try {
                    await github.rest.actions.deleteWorkflowRun({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      run_id: run.id
                    });
                    console.log(`Deleted failed run ${run.id} from ` +
                      `${run.created_at}`);
                    totalDeleted++;
                  } catch (error) {
                    console.error(`Failed to delete run ${run.id}: ` +
                      `${error.message}`);
                  }
                }
              }
              page++;
            }

            console.log(`Total failed runs deleted: ${totalDeleted}`);

      - name: Delete workflow runs older than 30 days on main branch
        uses: actions/github-script@v7
        with:
          script: |
            const thirtyDaysAgo = new Date();
            thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);

            console.log(`Deleting workflow runs on main branch older than ` +
              `${thirtyDaysAgo.toISOString()}`);

            let page = 1;
            let totalDeleted = 0;

            while (true) {
              const { data: workflowRuns } = await github.rest.actions
                .listWorkflowRunsForRepo({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  branch: 'main',
                  per_page: 100,
                  page: page
                });

              if (workflowRuns.workflow_runs.length === 0) {
                break;
              }

              for (const run of workflowRuns.workflow_runs) {
                const runDate = new Date(run.created_at);
                if (runDate < thirtyDaysAgo) {
                  try {
                    await github.rest.actions.deleteWorkflowRun({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      run_id: run.id
                    });
                    console.log(`Deleted main branch run ${run.id} from ` +
                      `${run.created_at}`);
                    totalDeleted++;
                  } catch (error) {
                    console.error(`Failed to delete run ${run.id}: ` +
                      `${error.message}`);
                  }
                }
              }
              page++;
            }

            console.log(`Total main branch runs deleted: ${totalDeleted}`);

      - name: Delete workflow runs older than 7 days on pull requests
        uses: actions/github-script@v7
        with:
          script: |
            const sevenDaysAgo = new Date();
            sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);

            console.log(`Deleting PR workflow runs older than ` +
              `${sevenDaysAgo.toISOString()}`);

            let page = 1;
            let totalDeleted = 0;

            while (true) {
              const { data: workflowRuns } = await github.rest.actions
                .listWorkflowRunsForRepo({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  event: 'pull_request',
                  per_page: 100,
                  page: page
                });

              if (workflowRuns.workflow_runs.length === 0) {
                break;
              }

              for (const run of workflowRuns.workflow_runs) {
                const runDate = new Date(run.created_at);
                if (runDate < sevenDaysAgo) {
                  try {
                    await github.rest.actions.deleteWorkflowRun({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      run_id: run.id
                    });
                    console.log(`Deleted PR run ${run.id} from ` +
                      `${run.created_at}`);
                    totalDeleted++;
                  } catch (error) {
                    console.error(`Failed to delete run ${run.id}: ` +
                      `${error.message}`);
                  }
                }
              }
              page++;
            }

            console.log(`Total PR runs deleted: ${totalDeleted}`);

      - name: Delete workflow runs from non-existent branches
        uses: actions/github-script@v7
        with:
          script: |
            console.log('Getting list of existing branches...');

            // Get all existing branches
            const existingBranches = new Set();
            let page = 1;

            while (true) {
              const { data: branches } = await github.rest.repos
                .listBranches({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  per_page: 100,
                  page: page
                });

              if (branches.length === 0) {
                break;
              }

              for (const branch of branches) {
                existingBranches.add(branch.name);
              }
              page++;
            }

            console.log(`Found ${existingBranches.size} existing branches`);

            // Get all workflow runs and check their branches
            page = 1;
            let totalDeleted = 0;

            while (true) {
              const { data: workflowRuns } = await github.rest.actions
                .listWorkflowRunsForRepo({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  per_page: 100,
                  page: page
                });

              if (workflowRuns.workflow_runs.length === 0) {
                break;
              }

              for (const run of workflowRuns.workflow_runs) {
                // Skip runs without head_branch (e.g., workflow_dispatch)
                if (!run.head_branch) {
                  continue;
                }

                if (!existingBranches.has(run.head_branch)) {
                  try {
                    await github.rest.actions.deleteWorkflowRun({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      run_id: run.id
                    });
                    console.log(`Deleted run ${run.id} from ` +
                      `non-existent branch "${run.head_branch}"`);
                    totalDeleted++;
                  } catch (error) {
                    console.error(`Failed to delete run ${run.id}: ` +
                      `${error.message}`);
                  }
                }
              }
              page++;
            }

            console.log(`Total runs from non-existent branches deleted: ` +
              `${totalDeleted}`);
